---
- name: make build directory
  file:
    path: "{{ build_dir }}"
    state: directory

- name: download gcc
  get_url:
    url: "http://www.netgull.com/gcc/releases/gcc-{{ gcc_version }}/gcc-{{ gcc_version }}.tar.gz"
    dest: "{{ build_dir }}"
    validate_certs: no
    timeout: 30
  register: download_gcc_result
  until: download_gcc_result | succeeded
  retries: 5
  delay: 10

- name: untar gcc
  command: "tar -zxvf {{ build_dir }}/gcc-{{ gcc_version }}.tar.gz"
  args:
    chdir: "{{ build_dir }}"
    creates: "{{ build_dir }}/gcc-{{ gcc_version }}"

- name: download gcc prerequisites
  command: ./contrib/download_prerequisites
  args:
    chdir: "{{ build_dir }}/gcc-{{ gcc_version }}"
  register: download_gcc_prereqs_result
  until: download_gcc_prereqs_result | succeeded
  retries: 5
  delay: 10

- name: configure gcc
  shell: "./configure --prefix={{ puppetlabs_build_dir }} --disable-multilib"
  args:
    chdir: "{{ build_dir }}/gcc-{{ gcc_version }}"

- name: patch gcc/gmp/configure.in
  patch:
    src: opt.build.gcc.gmp.configure.in.patch
    dest: "{{ build_dir }}/gcc-{{ gcc_version }}/gmp/configure.in"

- name: patch gcc/gmp/configure
  patch:
    src: opt.build.gcc.gmp.configure.patch
    dest: "{{ build_dir }}/gcc-{{ gcc_version }}/gmp/configure"

- name: run gcc make
  command: make
  args:
    chdir: "{{ build_dir }}/gcc-{{ gcc_version }}"

- name: run gcc make install
  command: make install
  args:
    chdir: "{{ build_dir }}/gcc-{{ gcc_version }}"

- name: copy libstdc++ to /usr/lib64
  shell: "cp {{ puppetlabs_build_dir }}/lib64/libstdc++.so.6 /usr/lib64 -f"
  when: ansible_architecture == 'x86_64'
