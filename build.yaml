---
- hosts: localhost
  tasks:
    - name: 'Clone puppet agent'
      git:
        repo: https://github.com/puppetlabs/puppet-agent.git
        dest: puppet-agent
        update: no

    - name: 'Clone vanagon'
      git:
        repo: https://github.com/puppetlabs/vanagon.git
        dest: puppet-agent/vanagon
        update: no

    - name: 'Patch vanagon'
      replace:
        dest: puppet-agent/vanagon/lib/vanagon/platform/rpm.rb
        regexp: "-bb"
        replace: "-ba"

    - name: 'Comment out internal build URL'
      lineinfile:
        dest: puppet-agent/configs/projects/puppet-agent.rb
        regexp: "proj.register_rewrite_rule 'http', 'http://buildsources.delivery.puppetlabs.net'"
        line: "#proj.register_rewrite_rule 'http', 'http://buildsources.delivery.puppetlabs.net'"

    - name: 'Update libselinux checksum'
      replace:
        dest: puppet-agent/configs/components/ruby-selinux.rb
        regexp: "f814c71fca5a85ebfeb81b57afed59db"
        replace: "544f75aab11c2af352facc51af12029f"

    - name: 'Install RVM gpg key'
      shell: gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3

    - name: 'Install RVM gpg key'
      shell: \curl -sSL https://get.rvm.io | bash -s stable --ruby

    - name: 'Bundle update'
      shell: "source ~/.rvm/scripts/rvm && VANAGON_LOCATION=file://{{ playbook_dir }}/../puppet-agent/vanagon bundle update"
      args:
        chdir: 'puppet-agent'
        creates: 'Gemfile.lock'

    - name: 'Build puppet-agent'
      shell: "source ~/.rvm/scripts/rvm && VANAGON_SSH_KEY=~/.vagrant.d/insecure_private_key VANAGON_LOCATION=file://{{ playbook_dir }}/../puppet-agent/vanagon build puppet-agent el-6-{{ ansible_architecture }} el7.example.com"
      args:
        chdir: 'puppet-agent'

- hosts: el7
  become: true
  tasks:
    - name: 'Find SRPM'
      shell: find /var/tmp | grep "src.rpm$"
      register: srpm_path

    - name: 'Get SRPM from host'
      fetch:
        src: "{{ item }}"
        dest: rpms/
        flat: yes
      with_items: "{{ srpm_path.stdout.split('\n') }}"
